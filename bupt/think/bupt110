1. 产生式： X -> （a，#）[...] ，a或者#是终止符，将a加入到X的f集中

2. 产生式： X -> Y[...] ，方括号内为可变部分
	然后考虑Y[...]是否具有如下形式：
	1. Y1（a，#）[...] 此种情况下，将Y1中的所有非空元素加入到X中。
	2. Y1Y2...Yk 此种情况下，又分为以下两种处理方式：
		1. Y1Y2...Y(i-1)中均有空，则将Yi中的非空元素加入到X中。
		2. Y1Y2...Yk中均有空，则将空加入到X中。（注意，当k=1时也满足），注意当出现X -> Y时，首先将Y中所有非空元素加入到X中，然后如果Y中有空，再将空加入到X中，综合起来就是将Y中所有元素加入到X

3. 使用二维数组存储每个X的first集，（集合最多有27个元素：a——z,#）。首先进行一次扫描，如果是第I类指令，那么直接执行指令，如果是第II类指令，那么先暂存指令。
	按照如上规则，扫描完一边所有指令后，所有只含有第I类指令的集合的first集将生成，再次执行一遍，每次执行一个第II类指令。
