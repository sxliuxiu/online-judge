这道题的解法为有序集合的思想：
dp[i][j]记录i个元素划分为j个有序集合的个数

1. 若第i个元素形成新的集合，然后插入到原来的有序集合中，此法种类数为dp[i - 1][j - 1] * j

2. 若第i个元素插入到已有集合中，那么此法种类数为dp[i - 1][j] * j

综上，dp[i][j] = dp[i - 1][j - 1] * j + dp[i - 1][j] * j, dp[1][0] = 0, dp[1][1] = 1

对于n = 100时，此题的答案会超过64位整数，在C++中不能使用基本类型记录，必须使用Java的大整数类型
